# Global settings
global:
  namespace: kornerstone-ml
  storageClass: "hostpath"  # Use hostpath for local development
  image:
    registry: ""
    pullPolicy: IfNotPresent
  postgresql:
    auth:
      database: feast  # Set the primary database

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    username: feast
    password: feast123
    database: feast  # Primary database
    databases: 
      - mlflow
      - feast
    existingSecret: ""
  primary:
    persistence:
      size: 10Gi
      storageClass: hostpath
  metrics:
    enabled: false  # Disabled due to secret key conflicts
    serviceMonitor:
      enabled: false

# MLflow configuration (custom implementation)
mlflow:
  enabled: true
  service:
    type: ClusterIP
    port: 5000
  tracking:
    enabled: true
    host: "0.0.0.0"
    port: 5000
  extraEnvVars:
    - name: MLFLOW_S3_ENDPOINT_URL
      value: "http://{{ .Release.Name }}-minio:9000"
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: "{{ .Release.Name }}-minio"
          key: root-user
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: "{{ .Release.Name }}-minio"
          key: root-password
    - name: MLFLOW_TRACKING_URI
      value: "http://{{ .Release.Name }}-mlflow:5000"
    - name: MLFLOW_S3_IGNORE_TLS
      value: "true"
    - name: MLFLOW_ARTIFACTS_DESTINATION
      value: "s3://mlflow/artifacts"
  metrics:
    enabled: false  # Disabled temporarily
    serviceMonitor:
      enabled: false

# MinIO configuration
minio:
  enabled: true
  auth:
    rootUser: minio
    rootPassword: minio123
    existingSecret: ""
  persistence:
    size: 10Gi
    storageClass: hostpath
  service:
    type: ClusterIP
    ports:
      api: 9000
      console: 9001
  defaultBuckets: "mlflow,feast"
  provisioning:
    enabled: true
    buckets:
      - name: mlflow
        policy: none
        purge: false
      - name: feast
        policy: none
        purge: false
  metrics:
    serviceMonitor:
      enabled: false  # Disabled temporarily

# Feast configuration
feast:
  enabled: true  # Re-enable Feast
  image:
    repository: feastdev/feature-server
    tag: "0.34.1"
  service:
    type: ClusterIP
    port: 6566
  config:
    project: kornerstone
  ports:
    - name: http
      containerPort: 6566
    - name: metrics
      containerPort: 8080
  extraEnvVars:
    - name: FEAST_USAGE_STATISTICS
      value: "false"

# Argo Workflows configuration
argo:
  enabled: true  # Re-enable Argo Workflows
  server:
    service:
      type: ClusterIP
      port: 2746
  workflow:
    serviceAccount:
      name: argo-workflow
  artifactRepository:
    s3:
      bucket: mlflow
      insecure: true

# KServe configuration
kserve:
  enabled: true  # Re-enable KServe
  serviceAccount:
    create: true
    name: kserve-sa

# Test configuration
tests:
  enabled: true

# Monitoring configuration
monitoring:
  enabled: false

# Prometheus configuration
kube-prometheus-stack:
  enabled: false  # Disabled until core components are stable
  prometheus:
    enabled: false
    serviceMonitor:
      enabled: false
  grafana:
    enabled: false