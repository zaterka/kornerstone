{{- if .Values.feast.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-feast
  labels:
    {{- include "kornerstone.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "kornerstone.selectorLabels" . | nindent 6 }}
      app: feast
  template:
    metadata:
      labels:
        {{- include "kornerstone.selectorLabels" . | nindent 8 }}
        app: feast
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/feast-configmap.yaml") . | sha256sum }}
    spec:
      initContainers:
      {{- include "kornerstone.postgresql.initContainer" . | nindent 6 }}
      {{- include "kornerstone.minio.initContainer" . | nindent 6 }}
      {{- if .Values.mlflow.enabled }}
      {{- include "kornerstone.mlflow.initContainer" . | nindent 6 }}
      {{- end }}
      containers:
      - name: feast
        image: "{{ .Values.feast.image.repository }}:{{ .Values.feast.image.tag | default "0.34.1" }}"
        imagePullPolicy: IfNotPresent
        command: ["feast", "serve"]
        ports:
        {{- range .Values.feast.ports }}
        - name: {{ .name }}
          containerPort: {{ .containerPort }}
        {{- end }}
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgresql
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgresql
              key: password
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-minio
              key: root-user
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-minio
              key: root-password
        - name: MINIO_PORT 
          value: "{{ .Values.minio.service.ports.api }}"
        - name: S3_STORAGE_BUCKET 
          value: "feast"
        {{- if .Values.mlflow.enabled }}
        - name: MLFLOW_TRACKING_URI
          value: "http://{{ .Release.Name }}-mlflow:{{ .Values.mlflow.service.port | default 5000 }}"
        {{- end }}
        {{- if .Values.feast.extraEnvVars }}
        {{- toYaml .Values.feast.extraEnvVars | nindent 8 }}
        {{- end }}
        volumeMounts:
        - name: feast-config
          mountPath: /etc/feast/feature_store.yaml
          subPath: feature_store.yaml
        livenessProbe:
          tcpSocket:
            port: {{ .Values.feast.service.port }}
          initialDelaySeconds: 60
          periodSeconds: 20
        readinessProbe:
          tcpSocket:
            port: {{ .Values.feast.service.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 512Mi
      volumes:
      - name: feast-config
        configMap:
          name: {{ .Release.Name }}-feast-config
{{- end }} 