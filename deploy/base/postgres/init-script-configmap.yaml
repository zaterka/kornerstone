apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
data:
  init.sql: |
    -- Create feast user if it doesn't exist
    DO $$
    BEGIN
      IF NOT EXISTS (SELECT FROM pg_roles WHERE rolname = current_setting('POSTGRES_USER')) THEN
        EXECUTE format('CREATE USER %I WITH PASSWORD %L', 
          current_setting('POSTGRES_USER'), 
          current_setting('POSTGRES_PASSWORD')
        );
        EXECUTE format('ALTER USER %I WITH SUPERUSER', 
          current_setting('POSTGRES_USER')
        );
      END IF;
    END
    $$;

    -- Create databases if they don't exist
    DO $$
    BEGIN
      IF NOT EXISTS (SELECT FROM pg_database WHERE datname = 'feast') THEN
        CREATE DATABASE feast;
      END IF;
      IF NOT EXISTS (SELECT FROM pg_database WHERE datname = 'mlflow') THEN
        CREATE DATABASE mlflow;
      END IF;
    END
    $$;

    -- Set up feast database
    \c feast
    CREATE SCHEMA IF NOT EXISTS public;
    EXECUTE format('GRANT ALL PRIVILEGES ON DATABASE feast TO %I', 
      current_setting('POSTGRES_USER')
    );
    EXECUTE format('GRANT ALL PRIVILEGES ON SCHEMA public TO %I', 
      current_setting('POSTGRES_USER')
    );
    EXECUTE format('ALTER DATABASE feast OWNER TO %I', 
      current_setting('POSTGRES_USER')
    );

    -- Set up mlflow database
    \c mlflow
    CREATE SCHEMA IF NOT EXISTS public;
    EXECUTE format('GRANT ALL PRIVILEGES ON DATABASE mlflow TO %I', 
      current_setting('POSTGRES_USER')
    );
    EXECUTE format('GRANT ALL PRIVILEGES ON SCHEMA public TO %I', 
      current_setting('POSTGRES_USER')
    );
    EXECUTE format('ALTER DATABASE mlflow OWNER TO %I', 
      current_setting('POSTGRES_USER')
    ); 